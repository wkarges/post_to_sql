"""
df = pd.read_json("C:\Projects\PayPal\SampleResponse.json")
df.columns = [None,'Service_Level','CurrNumberWaitingCalls','Total_Calls_Answered','Total_Abandoned']
df.to_csv('test.csv', mode='a', header=False)

   
        #z = json.loads(my_response)

        #y = json.loads(jsondata)


        f = open('SampleResponse.json')
        jsondata = json.load(f)

        fcsv = csv.writer(open("test.csv", "wb+"))

        # Create CSV Header
        #fcsv.writerow(["Object", "Service_Level", "CurrNumberWaitingCalls", "Total_Calls_Answered", "Total_Abandoned"])

        for z in f:
            fcsv.writerow([z["Object"],
                            z["values"]["Service_Level"],
                            z["values"]["CurrNumberWaitingCalls"],
                            z["values"]["Total_Calls_Answered"],
                            z["values"]["Total_Abandoned"]])



f = open('SampleResponse.json')
jsondata = json.load(f)
f.close()
"""

"""
df.columns = [None,'Service_Level','CurrNumberWaitingCalls','Total_Calls_Answered','Total_Abandoned']
df = pd.DataFrame(df, columns=["Object","Service_Level","CurrNumberWaitingCalls","Total_Calls_Answered","Total_Abandoned"])
df.insert(0, "Object", True)
df.drop(df.index)
df = df.rename_axis('Objects', axis=1)
df.columns = ["Object","Service_Level","CurrNumberWaitingCalls","Total_Calls_Answered","Total_Abandoned"]
df = df.iloc[ : , [0,1,2,3,4]]


        #Evaluate whether to write header
        if writeHeader is True:
            # df.index.values[0] = myobject
            df.to_csv('test.csv', mode='w', header=True)
            writeHeader = False
        else:
            df.to_csv('test.csv', mode='a', header=False)
        """

# Unused scripts

"""
read_responses.to_sql('responseTest', conn, if_exists='replace', index = False)


conn = sq.connect('PayPalTest.db')
c = conn.cursor()

# Update sql via .csv
read_responses = pd.read_csv(r'C:\Projects\PayPal\responses.csv')
read_responses.to_sql('RESPONSES', conn, if_exists='replace', index=True)
print("Updating SQL table with responses.csv")
"""

# mydf = pd.DataFrame(table)
# mydf.drop(['tableId', 'tableName', 'tableDescription', 'tableLastModified', 'tableCreatedDate', 'row_id', 'row_lastModified', 'row_createdDate', 'Objects_name', 'Objects_id', '_fwi_condition'], axis = 1)

        """
        # Append Unix times and current object to JSON body
        my_five_json = {"filters":{"objectname":[myobject]},"from":fm,"to":now,"channels":["voice"],"timeInterval":"all","metricNames":[metric_names]}
        my_ten_json = {"filters":{"objectname":[myobject]},"from":tm,"to":now,"channels":["voice"],"timeInterval":"all","metricNames":[metric_names]}
        my_fifteen_json = {"filters":{"objectname":[myobject]},"from":fifm,"to":now,"channels":["voice"],"timeInterval":"all","metricNames":[metric_names]}

        #Make post request with JSON body
        five_request = requests.post(post_url, json=my_five_json)
        ten_request = requests.post(post_url, json=my_ten_json)
        fif_request = requests.post(post_url, json=my_fifteen_json)

        five_response = five_request.json()
        ten_response = ten_request.json()
        fif_response = fif_request.json()

        """

        #generate .csv names
        mytime = z
        csvname = mytime.strip() + "_response.csv"
        print(csvname)

        #make POST request
        my_json = {"filters":{"objectname":[myobject]},"from":y,"to":now,"channels":["voice"],"timeInterval":"all","metricNames":[metric_names]}
        my_request = requests.post(post_url, json=my_json)
        my_response = my_request.json()

                #Set Dataframe as JSON response
        mydata = pd.read_json("C:\Projects\PayPal\Assets\sampledata\SampleResponse.json") # <-- This field should be five_response in production.

        df = pd.DataFrame(mydata)

        #drop Unit row from .csv
        df = df[:-1]
        
        #Set Index name
        df.index.name = 'Objects'
        df.index.values[0] = myobject

        
        //----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        
        # my_response = cur_time.strip() + "_response"

        """
        #Make post request with JSON body
        five_request = requests.post(post_url, json=my_five_json)
        ten_request = requests.post(post_url, json=my_ten_json)
        fif_request = requests.post(post_url, json=my_fifteen_json)

        five_response = five_request.json()
        ten_response = ten_request.json()
        fif_response = fif_request.json()

        print("Status Codes:  ", "fiveminrequest:", five_request.status_code, "tenminrequest:", ten_request.status_code, "fifteenminrequest:", fif_request.status_code, "  -- For Object: ", myobject)
        """

        if op.isfile('five_responses.csv'):
    os.remove('five_responses.csv')
    print("Existing five_responses.csv, generating new file.")

if op.isfile('ten_responses.csv'):
    os.remove('ten_responses.csv')
    print("Existing ten_responses.csv, generating new file.")

if op.isfile('fifteen_responses.csv'):
    os.remove('fifteen_responses.csv')
    print("Existing fif_responses.csv, generating new file.")

    # import urllib.request as urlr # <-- Currently unused
# import io 
# import pathlib
# import sqlite3 as sq
# import sqlalchemy # <-- Currently unused